// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package attachments

import (
	"github.com/dzsdbsdxq/dz-gin-blog/app/core/attachments/controller"
	"github.com/dzsdbsdxq/dz-gin-blog/app/core/attachments/repo"
	"github.com/dzsdbsdxq/dz-gin-blog/app/core/attachments/repo/dao"
	"github.com/dzsdbsdxq/dz-gin-blog/app/core/attachments/service"
	"github.com/dzsdbsdxq/dz-gin-blog/app/core/oss"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitAttachmentsModule(db *gorm.DB, ossMdl *oss.Module) *Module {
	attachmentsDao := dao.NewAttachmentsDao(db)
	attachmentsRepository := repo.NewAttachmentsRepository(attachmentsDao)
	attachmentsService := service.NewAttachmentsService(attachmentsRepository)
	iOssService := ossMdl.Svc
	attachmentsHandler := controller.NewAttachmentsHandler(attachmentsService, iOssService)
	module := &Module{
		Svc: attachmentsService,
		Hdl: attachmentsHandler,
	}
	return module
}

// wire.go:

var AttachmentsProviders = wire.NewSet(controller.NewAttachmentsHandler, service.NewAttachmentsService, repo.NewAttachmentsRepository, dao.NewAttachmentsDao, wire.Bind(new(service.IAttachmentsService), new(*service.AttachmentsService)), wire.Bind(new(repo.IAttachmentsRepository), new(*repo.AttachmentsRepository)), wire.Bind(new(dao.IAttachmentsDao), new(*dao.AttachmentsDao)))
